# Custom network for all Reveal.me services
networks:
  revealme-net:
    driver: bridge
    name: revealme-net

# Named volumes for persistent data
volumes:
  postgres-data:
    driver: local
  spiderfoot-data:
    driver: local

services:
  # PostgreSQL Database Service
  postgres:
    image: postgres:15-alpine
    container_name: revealme-postgres
    networks:
      - revealme-net
    env_file:
      - .env
    environment:
      POSTGRES_USER: revealme_user
      POSTGRES_PASSWORD: S3cureP@ssw0rd!
      POSTGRES_DB: revealme_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache/Message Broker Service
  redis:
    image: redis:7-alpine
    container_name: revealme-redis
    networks:
      - revealme-net
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: revealme-backend
    networks:
      - revealme-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      DATABASE_URL_SYNC: postgresql://revealme_user:S3cureP@ssw0rd!@postgres:5432/revealme_db
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./data/reports:/app/reports
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker Service
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: revealme-worker
    networks:
      - revealme-net
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - ./backend/.env
    environment:
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./backend:/app
      - ./data/reports:/app/reports
    command: celery -A app.worker:celery_app worker --loglevel=info --concurrency=2
    restart: on-failure

  # SpiderFoot OSINT Service
  spiderfoot:
    image: josaorg/spiderfoot:latest
    container_name: revealme-spiderfoot
    networks:
      - revealme-net
    ports:
      - "8080:8080"
    volumes:
      - spiderfoot-data:/sf/data
      - ./data/spiderfoot:/sf/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3 